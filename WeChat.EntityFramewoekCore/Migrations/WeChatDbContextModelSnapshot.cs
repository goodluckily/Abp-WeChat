// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Volo.Abp.EntityFrameworkCore;
using WeChat.EntityFramewoekCore;

namespace WeChat.EntityFramewoekCore.Migrations
{
    [DbContext(typeof(WeChatDbContext))]
    partial class WeChatDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.MySql)
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("WeChat.Domain.WeChat.JueJinblogs", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<int?>("AnalyzingType")
                        .HasColumnType("int");

                    b.Property<string>("Author")
                        .HasMaxLength(520)
                        .HasColumnType("varchar(520)")
                        .HasComment("作者");

                    b.Property<string>("AuthorManUrl")
                        .HasColumnType("longtext")
                        .HasComment("作者主页地址");

                    b.Property<int?>("CommentNum")
                        .HasColumnType("int")
                        .HasComment("评论数");

                    b.Property<string>("ContentUrl")
                        .HasColumnType("longtext")
                        .HasComment("文章完整地址Url");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("CreateUserId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("EditTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("EditUserId")
                        .HasColumnType("char(36)");

                    b.Property<int?>("GiveLikeNum")
                        .HasColumnType("int")
                        .HasComment("点赞数");

                    b.Property<double?>("HotIndex")
                        .HasColumnType("double")
                        .HasComment("热门系数");

                    b.Property<string>("Img")
                        .HasColumnType("longtext")
                        .HasComment("主图");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsDel")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ReadNum")
                        .HasColumnType("int")
                        .HasComment("阅读数");

                    b.Property<DateTime?>("ReleaseTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("发布时间");

                    b.Property<string>("SubContent")
                        .HasColumnType("longtext")
                        .HasComment("文章简介");

                    b.Property<string>("Title")
                        .HasColumnType("longtext")
                        .HasComment("标题");

                    b.HasKey("Id");

                    b.ToTable("JueJinblogs");
                });

            modelBuilder.Entity("WeChat.Domain.WeChat.Log", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Exception")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LogDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LogLevel")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("日志等级");

                    b.Property<string>("LogType")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("日志类型");

                    b.Property<string>("Logger")
                        .HasColumnType("longtext");

                    b.Property<string>("MachineIp")
                        .HasColumnType("longtext");

                    b.Property<string>("MachineName")
                        .HasColumnType("longtext");

                    b.Property<string>("Message")
                        .HasColumnType("longtext");

                    b.Property<string>("NetRequestMethod")
                        .HasColumnType("longtext");

                    b.Property<string>("NetRequestUrl")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)")
                        .HasComment("操作人");

                    b.HasKey("Id");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("WeChat.Domain.WeChat.Netcnblogs", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<int?>("AnalyzingType")
                        .HasColumnType("int");

                    b.Property<string>("Author")
                        .HasMaxLength(520)
                        .HasColumnType("varchar(520)")
                        .HasComment("作者");

                    b.Property<string>("AuthorManUrl")
                        .HasColumnType("longtext")
                        .HasComment("作者主页地址");

                    b.Property<int?>("CommentNum")
                        .HasColumnType("int")
                        .HasComment("评论数");

                    b.Property<string>("ContentUrl")
                        .HasColumnType("longtext")
                        .HasComment("文章完整地址Url");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("CreateUserId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("EditTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("EditUserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Img")
                        .HasColumnType("longtext")
                        .HasComment("主图");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsDel")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ReadNum")
                        .HasColumnType("int")
                        .HasComment("阅读数");

                    b.Property<int?>("RecommendNum")
                        .HasColumnType("int")
                        .HasComment("推荐数");

                    b.Property<DateTime?>("ReleaseTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("发布时间");

                    b.Property<string>("SubContent")
                        .HasColumnType("longtext")
                        .HasComment("文章简介");

                    b.Property<string>("Title")
                        .HasColumnType("longtext")
                        .HasComment("标题");

                    b.HasKey("Id");

                    b.ToTable("Netcnblogs");
                });

            modelBuilder.Entity("WeChat.Domain.WeChat.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("CreateUserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasComment("说明");

                    b.Property<DateTime?>("EditTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("EditUserId")
                        .HasColumnType("char(36)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsDel")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3a0165ac-8ad8-66e3-7a92-e358859496f3"),
                            CreateTime = new DateTime(2022, 1, 13, 20, 53, 4, 856, DateTimeKind.Local).AddTicks(4137),
                            CreateUserId = new Guid("3a0165ac-8ad7-c984-1cef-e02d6d2cfe66"),
                            Description = "最高权限管理者",
                            IsActive = true,
                            IsDel = false,
                            Name = "管理者"
                        });
                });

            modelBuilder.Entity("WeChat.Domain.WeChat.Token", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Access_Token")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasComment("Token");

                    b.Property<double?>("Expires_In")
                        .HasColumnType("double")
                        .HasComment("多少秒后失效");

                    b.Property<DateTime?>("OperationTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("操作时间");

                    b.Property<int>("TokenType")
                        .HasColumnType("int");

                    b.Property<int>("WeiChatType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Token");
                });

            modelBuilder.Entity("WeChat.Domain.WeChat.UserAndRoleMap", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("CreateUserId")
                        .HasColumnType("char(36)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserAndRoleMap");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("3a0165ac-8ad7-c984-1cef-e02d6d2cfe66"),
                            RoleId = new Guid("3a0165ac-8ad8-66e3-7a92-e358859496f3"),
                            CreateTime = new DateTime(2022, 1, 13, 20, 53, 4, 856, DateTimeKind.Local).AddTicks(5137),
                            CreateUserId = new Guid("3a0165ac-8ad7-c984-1cef-e02d6d2cfe66")
                        });
                });

            modelBuilder.Entity("WeChat.Domain.WeChat.UserInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasComment("头像Url地址");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("CreateUserId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("EditTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("EditUserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsDel")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LoginName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NickName")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("PassWrod")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("UserInfo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3a0165ac-8ad7-c984-1cef-e02d6d2cfe66"),
                            CreateTime = new DateTime(2022, 1, 13, 20, 53, 4, 856, DateTimeKind.Local).AddTicks(1665),
                            IsActive = true,
                            IsDel = true,
                            LoginName = "admin",
                            NickName = "管理员",
                            PassWrod = "123456"
                        });
                });

            modelBuilder.Entity("WeChat.Domain.WeChat.UserAndRoleMap", b =>
                {
                    b.HasOne("WeChat.Domain.WeChat.Role", "Role")
                        .WithMany("UserAndRoleMaps")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeChat.Domain.WeChat.UserInfo", "UserInfo")
                        .WithMany("UserAndRoleMaps")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("WeChat.Domain.WeChat.Role", b =>
                {
                    b.Navigation("UserAndRoleMaps");
                });

            modelBuilder.Entity("WeChat.Domain.WeChat.UserInfo", b =>
                {
                    b.Navigation("UserAndRoleMaps");
                });
#pragma warning restore 612, 618
        }
    }
}
